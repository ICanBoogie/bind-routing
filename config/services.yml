parameters:
  routing.action_responder.aliases: ~ # provided by the compiler pass

services:
  _defaults:
    autowire: true

  ICanBoogie\Routing\ActionResponderProvider:
    class: ICanBoogie\Routing\ActionResponderProvider\Container
    arguments:
    - !tagged_locator { tag: action_responder }
    - '%routing.action_responder.aliases%'

  ICanBoogie\Routing\RequestResponderProvider:
    tags:
    - { name: request_responder }

  ICanBoogie\Routing\RouteProvider:
    factory: [ '@ICanBoogie\ConfigProvider', config_for_class ]
    arguments:
    - ICanBoogie\Routing\RouteProvider

  ICanBoogie\Routing\RouteProvider\Memoize:
    decorates: ICanBoogie\Routing\RouteProvider

  ICanBoogie\Routing\UrlGenerator\UrlGeneratorWithRouteProvider: ~

  ICanBoogie\Routing\UrlGenerator:
    alias: ICanBoogie\Routing\UrlGenerator\UrlGeneratorWithRouteProvider

  ICanBoogie\Binding\Routing\Prototype\UrlMethod:
    public: true # so it can be used as a reference by prototypes

  # Console

  console.command.routing.routes:
    class: ICanBoogie\Binding\Routing\Console\ListRoutesCommand
    arguments:
      $style: '%console.style.table%'
    tags:
    - { name: console.command, command: 'routes' }
    - { name: console.command, command: 'routing:routes' }

  console.command.routing.actions:
    class: ICanBoogie\Binding\Routing\Console\ListActionsCommand
    arguments:
      $aliases: '%routing.action_responder.aliases%'
      $style: '%console.style.table%'
    tags:
    - { name: console.command, command: 'routing:actions' }
